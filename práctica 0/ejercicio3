{a) Implemente un módulo CargarLista que cree una lista de enteros y le
agregue valores aleatorios entre el 100 y 150, hasta que se genere el
120.
b) Implemente un módulo ImprimirLista que reciba una lista generada en
a) e imprima todos los valores de la lista en el mismo orden que están
almacenados.
c) Implemente un módulo BuscarElemento que reciba la lista generada
en a) y un valor entero y retorne true si el valor se encuentra en la lista
y false en caso contrario.
d) Invocar desde el programa principal a los módulos implementados
para crear una lista, mostrar todos sus elementos y determinar si un
valor leído por teclado se encuentra o no en la lista.}
program actividad3;
const
	corte = 120;
	 
type
	
	lista = ^nodo;
	nodo = record
		dato: integer;
		sig: lista;
	end;

procedure agregaradelante(var l: lista; num: integer);
var
	nue: lista;
begin 
	new(nue);
	nue^.dato := num;
	nue^.sig := l;
	l := nue;
end;
procedure cargarlista(var l: lista);
var
	aleatorio: integer;
begin
	aleatorio := random(51) + 100; // (150 - 100 + 1)
	while (aleatorio <> corte) do begin
		agregaradelante(l, aleatorio);
		aleatorio := random(51) + 100;
	end;
end;
	
procedure imprimirlista(l: lista);
begin 
	while (l <> nil) do begin // mismo orden en q fue almacenada?
		writeln(l^.dato);
		l := l^.sig;
	end;
end;

function buscarelemento(l: lista; num: integer): boolean;
var
	aux: lista;
	encontre: boolean;
begin
	encontre := false;
	aux := l;
	while (aux <> nil) and (encontre = false) do begin 
		if (aux^.dato = num) then 
			encontre := true
		else
			aux := aux^.sig;
	end;
	buscarelemento := encontre;
	writeln(encontre);
end;

var
	l: lista;
	numero: integer;
begin
	Randomize;
	l := nil;
	cargarlista(l);
	imprimirlista(l);
	writeln('Ingrese un valor para ver si esta en la lista: ');
	readln(numero);
	buscarelemento(l, numero);
end.
